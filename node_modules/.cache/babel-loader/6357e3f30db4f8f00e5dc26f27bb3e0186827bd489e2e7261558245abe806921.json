{"ast":null,"code":"var _jsxFileName = \"D:\\\\collegeHub\\\\src\\\\components\\\\Community.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { signOut } from 'firebase/auth';\nimport { collection, addDoc, getDocs, orderBy, query, serverTimestamp, doc, updateDoc } from 'firebase/firestore';\nimport { auth, db } from '../firebase';\nimport CreatePostModal from './CreatePostModal';\nimport CommentsModal from './CommentsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Community({\n  user\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [showCommentsModal, setShowCommentsModal] = useState(false);\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchPosts();\n    fetchUsers();\n  }, []);\n  const fetchPosts = async () => {\n    try {\n      const q = query(collection(db, 'posts'), orderBy('timestamp', 'desc'));\n      const querySnapshot = await getDocs(q);\n      const postsData = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setPosts(postsData);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const q = query(collection(db, 'users'), orderBy('createdAt', 'desc'));\n      const querySnapshot = await getDocs(q);\n      const usersData = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setUsers(usersData);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n      navigate('/login');\n    } catch (error) {\n      console.error('Error signing out:', error);\n    }\n  };\n  const handleCreatePost = async (title, content) => {\n    try {\n      var _users$find;\n      await addDoc(collection(db, 'posts'), {\n        title,\n        content,\n        author: user.email,\n        authorId: user.uid,\n        timestamp: serverTimestamp(),\n        upvotes: 0,\n        downvotes: 0,\n        upvotedBy: [],\n        downvotedBy: [],\n        comments: []\n      });\n\n      // Update user's post count\n      const userRef = doc(db, 'users', user.uid);\n      await updateDoc(userRef, {\n        postCount: (((_users$find = users.find(u => u.uid === user.uid)) === null || _users$find === void 0 ? void 0 : _users$find.postCount) || 0) + 1\n      });\n      setShowCreateModal(false);\n      fetchPosts(); // Refresh posts\n      fetchUsers(); // Refresh users to update stats\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n  const handleUpvote = async (postId, currentUpvotes, upvotedBy, downvotedBy) => {\n    try {\n      const postRef = doc(db, 'posts', postId);\n      const userEmail = user.email;\n      let newUpvotes = currentUpvotes;\n      let newUpvotedBy = [...upvotedBy];\n      let newDownvotedBy = [...downvotedBy];\n\n      // If user already upvoted, remove upvote\n      if (upvotedBy.includes(userEmail)) {\n        newUpvotes -= 1;\n        newUpvotedBy = upvotedBy.filter(email => email !== userEmail);\n      }\n      // If user downvoted, remove downvote and add upvote\n      else if (downvotedBy.includes(userEmail)) {\n        newUpvotes += 1;\n        newDownvotedBy = downvotedBy.filter(email => email !== userEmail);\n        newUpvotedBy.push(userEmail);\n      }\n      // Add upvote\n      else {\n        newUpvotes += 1;\n        newUpvotedBy.push(userEmail);\n      }\n      await updateDoc(postRef, {\n        upvotes: newUpvotes,\n        downvotes: newDownvotedBy.length,\n        upvotedBy: newUpvotedBy,\n        downvotedBy: newDownvotedBy\n      });\n      fetchPosts(); // Refresh posts\n    } catch (error) {\n      console.error('Error upvoting:', error);\n    }\n  };\n  const handleDownvote = async (postId, currentDownvotes, upvotedBy, downvotedBy) => {\n    try {\n      const postRef = doc(db, 'posts', postId);\n      const userEmail = user.email;\n      let newDownvotes = currentDownvotes;\n      let newUpvotedBy = [...upvotedBy];\n      let newDownvotedBy = [...downvotedBy];\n\n      // If user already downvoted, remove downvote\n      if (downvotedBy.includes(userEmail)) {\n        newDownvotes -= 1;\n        newDownvotedBy = downvotedBy.filter(email => email !== userEmail);\n      }\n      // If user upvoted, remove upvote and add downvote\n      else if (upvotedBy.includes(userEmail)) {\n        newDownvotes += 1;\n        newUpvotedBy = upvotedBy.filter(email => email !== userEmail);\n        newDownvotedBy.push(userEmail);\n      }\n      // Add downvote\n      else {\n        newDownvotes += 1;\n        newDownvotedBy.push(userEmail);\n      }\n      await updateDoc(postRef, {\n        upvotes: newUpvotedBy.length,\n        downvotes: newDownvotes,\n        upvotedBy: newUpvotedBy,\n        downvotedBy: newDownvotedBy\n      });\n      fetchPosts(); // Refresh posts\n    } catch (error) {\n      console.error('Error downvoting:', error);\n    }\n  };\n  const handleShowComments = post => {\n    console.log('Opening comments for post:', post);\n    setSelectedPost(post);\n    setShowCommentsModal(true);\n  };\n  const formatTime = timestamp => {\n    if (!timestamp) return 'Just now';\n    const now = new Date();\n    const postTime = timestamp.toDate();\n    const diffInMinutes = Math.floor((now - postTime) / (1000 * 60));\n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    return `${Math.floor(diffInMinutes / 1440)}d ago`;\n  };\n  const isUpvoted = post => {\n    return post.upvotedBy && post.upvotedBy.includes(user.email);\n  };\n  const isDownvoted = post => {\n    return post.downvotedBy && post.downvotedBy.includes(user.email);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"community-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"community-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-avatar\",\n          children: user.email.charAt(0).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user-email\",\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Our Community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Share your thoughts, ask questions, and engage with others!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-post-btn\",\n        onClick: () => setShowCreateModal(true),\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Registered Users (\", users.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-list\",\n        children: users.map(userData => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar-small\",\n            children: userData.email.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-email-small\",\n              children: userData.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-stats\",\n              children: [\"Posts: \", userData.postCount || 0, \" | Comments: \", userData.commentCount || 0, \" | Joined: \", userData.createdAt ? formatTime(userData.createdAt) : 'Recently']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, userData.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '40px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading posts...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this) : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '40px',\n          color: '#818384'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No posts yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Be the first to create a post!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"post-author\",\n            children: post.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"post-time\",\n            children: formatTime(post.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"post-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-content\",\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `post-action ${isUpvoted(post) ? 'active' : ''}`,\n            onClick: () => handleUpvote(post.id, post.upvotes || 0, post.upvotedBy || [], post.downvotedBy || []),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uD83D\\uDC4D \", post.upvotes || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `post-action ${isDownvoted(post) ? 'active' : ''}`,\n            onClick: () => handleDownvote(post.id, post.downvotes || 0, post.upvotedBy || [], post.downvotedBy || []),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uD83D\\uDC4E \", post.downvotes || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-action\",\n            onClick: () => handleShowComments(post),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uD83D\\uDCAC \", post.comments ? post.comments.length : 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), showCreateModal && /*#__PURE__*/_jsxDEV(CreatePostModal, {\n      onClose: () => setShowCreateModal(false),\n      onSubmit: handleCreatePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this), showCommentsModal && selectedPost && /*#__PURE__*/_jsxDEV(CommentsModal, {\n      post: selectedPost,\n      user: user,\n      onClose: () => {\n        setShowCommentsModal(false);\n        setSelectedPost(null);\n      },\n      onCommentAdded: () => {\n        fetchPosts();\n        fetchUsers(); // Refresh users to update comment counts\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n_s(Community, \"TwpLXCAr6J06Ty6XR2BYsqqtrwU=\", false, function () {\n  return [useNavigate];\n});\n_c = Community;\nexport default Community;\nvar _c;\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","signOut","collection","addDoc","getDocs","orderBy","query","serverTimestamp","doc","updateDoc","auth","db","CreatePostModal","CommentsModal","jsxDEV","_jsxDEV","Community","user","_s","posts","setPosts","users","setUsers","showCreateModal","setShowCreateModal","showCommentsModal","setShowCommentsModal","selectedPost","setSelectedPost","loading","setLoading","navigate","fetchPosts","fetchUsers","q","querySnapshot","postsData","docs","map","id","data","error","console","usersData","handleLogout","handleCreatePost","title","content","_users$find","author","email","authorId","uid","timestamp","upvotes","downvotes","upvotedBy","downvotedBy","comments","userRef","postCount","find","u","handleUpvote","postId","currentUpvotes","postRef","userEmail","newUpvotes","newUpvotedBy","newDownvotedBy","includes","filter","push","length","handleDownvote","currentDownvotes","newDownvotes","handleShowComments","post","log","formatTime","now","Date","postTime","toDate","diffInMinutes","Math","floor","isUpvoted","isDownvoted","className","children","charAt","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","onClick","userData","commentCount","createdAt","style","textAlign","padding","color","onClose","onSubmit","onCommentAdded","_c","$RefreshReg$"],"sources":["D:/collegeHub/src/components/Community.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { signOut } from 'firebase/auth';\r\nimport { \r\n  collection, \r\n  addDoc, \r\n  getDocs, \r\n  orderBy, \r\n  query, \r\n  serverTimestamp,\r\n  doc,\r\n  updateDoc\r\n} from 'firebase/firestore';\r\nimport { auth, db } from '../firebase';\r\nimport CreatePostModal from './CreatePostModal';\r\nimport CommentsModal from './CommentsModal';\r\n\r\nfunction Community({ user }) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [showCommentsModal, setShowCommentsModal] = useState(false);\r\n  const [selectedPost, setSelectedPost] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const q = query(collection(db, 'posts'), orderBy('timestamp', 'desc'));\r\n      const querySnapshot = await getDocs(q);\r\n      const postsData = querySnapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      setPosts(postsData);\r\n    } catch (error) {\r\n      console.error('Error fetching posts:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const q = query(collection(db, 'users'), orderBy('createdAt', 'desc'));\r\n      const querySnapshot = await getDocs(q);\r\n      const usersData = querySnapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      setUsers(usersData);\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.error('Error signing out:', error);\r\n    }\r\n  };\r\n\r\n  const handleCreatePost = async (title, content) => {\r\n    try {\r\n      await addDoc(collection(db, 'posts'), {\r\n        title,\r\n        content,\r\n        author: user.email,\r\n        authorId: user.uid,\r\n        timestamp: serverTimestamp(),\r\n        upvotes: 0,\r\n        downvotes: 0,\r\n        upvotedBy: [],\r\n        downvotedBy: [],\r\n        comments: []\r\n      });\r\n      \r\n      // Update user's post count\r\n      const userRef = doc(db, 'users', user.uid);\r\n      await updateDoc(userRef, {\r\n        postCount: (users.find(u => u.uid === user.uid)?.postCount || 0) + 1\r\n      });\r\n      \r\n      setShowCreateModal(false);\r\n      fetchPosts(); // Refresh posts\r\n      fetchUsers(); // Refresh users to update stats\r\n    } catch (error) {\r\n      console.error('Error creating post:', error);\r\n    }\r\n  };\r\n\r\n  const handleUpvote = async (postId, currentUpvotes, upvotedBy, downvotedBy) => {\r\n    try {\r\n      const postRef = doc(db, 'posts', postId);\r\n      const userEmail = user.email;\r\n      \r\n      let newUpvotes = currentUpvotes;\r\n      let newUpvotedBy = [...upvotedBy];\r\n      let newDownvotedBy = [...downvotedBy];\r\n\r\n      // If user already upvoted, remove upvote\r\n      if (upvotedBy.includes(userEmail)) {\r\n        newUpvotes -= 1;\r\n        newUpvotedBy = upvotedBy.filter(email => email !== userEmail);\r\n      } \r\n      // If user downvoted, remove downvote and add upvote\r\n      else if (downvotedBy.includes(userEmail)) {\r\n        newUpvotes += 1;\r\n        newDownvotedBy = downvotedBy.filter(email => email !== userEmail);\r\n        newUpvotedBy.push(userEmail);\r\n      } \r\n      // Add upvote\r\n      else {\r\n        newUpvotes += 1;\r\n        newUpvotedBy.push(userEmail);\r\n      }\r\n\r\n      await updateDoc(postRef, {\r\n        upvotes: newUpvotes,\r\n        downvotes: newDownvotedBy.length,\r\n        upvotedBy: newUpvotedBy,\r\n        downvotedBy: newDownvotedBy\r\n      });\r\n\r\n      fetchPosts(); // Refresh posts\r\n    } catch (error) {\r\n      console.error('Error upvoting:', error);\r\n    }\r\n  };\r\n\r\n  const handleDownvote = async (postId, currentDownvotes, upvotedBy, downvotedBy) => {\r\n    try {\r\n      const postRef = doc(db, 'posts', postId);\r\n      const userEmail = user.email;\r\n      \r\n      let newDownvotes = currentDownvotes;\r\n      let newUpvotedBy = [...upvotedBy];\r\n      let newDownvotedBy = [...downvotedBy];\r\n\r\n      // If user already downvoted, remove downvote\r\n      if (downvotedBy.includes(userEmail)) {\r\n        newDownvotes -= 1;\r\n        newDownvotedBy = downvotedBy.filter(email => email !== userEmail);\r\n      } \r\n      // If user upvoted, remove upvote and add downvote\r\n      else if (upvotedBy.includes(userEmail)) {\r\n        newDownvotes += 1;\r\n        newUpvotedBy = upvotedBy.filter(email => email !== userEmail);\r\n        newDownvotedBy.push(userEmail);\r\n      } \r\n      // Add downvote\r\n      else {\r\n        newDownvotes += 1;\r\n        newDownvotedBy.push(userEmail);\r\n      }\r\n\r\n      await updateDoc(postRef, {\r\n        upvotes: newUpvotedBy.length,\r\n        downvotes: newDownvotes,\r\n        upvotedBy: newUpvotedBy,\r\n        downvotedBy: newDownvotedBy\r\n      });\r\n\r\n      fetchPosts(); // Refresh posts\r\n    } catch (error) {\r\n      console.error('Error downvoting:', error);\r\n    }\r\n  };\r\n\r\n  const handleShowComments = (post) => {\r\n    console.log('Opening comments for post:', post);\r\n    setSelectedPost(post);\r\n    setShowCommentsModal(true);\r\n  };\r\n\r\n  const formatTime = (timestamp) => {\r\n    if (!timestamp) return 'Just now';\r\n    \r\n    const now = new Date();\r\n    const postTime = timestamp.toDate();\r\n    const diffInMinutes = Math.floor((now - postTime) / (1000 * 60));\r\n    \r\n    if (diffInMinutes < 1) return 'Just now';\r\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\r\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\r\n    return `${Math.floor(diffInMinutes / 1440)}d ago`;\r\n  };\r\n\r\n  const isUpvoted = (post) => {\r\n    return post.upvotedBy && post.upvotedBy.includes(user.email);\r\n  };\r\n\r\n  const isDownvoted = (post) => {\r\n    return post.downvotedBy && post.downvotedBy.includes(user.email);\r\n  };\r\n\r\n  return (\r\n    <div className=\"community-container\">\r\n      <div className=\"community-header\">\r\n        <div className=\"user-info\">\r\n          <div className=\"user-avatar\">\r\n            {user.email.charAt(0).toUpperCase()}\r\n          </div>\r\n          <span className=\"user-email\">{user.email}</span>\r\n          <button className=\"logout-btn\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n        \r\n        <h1>Welcome to Our Community</h1>\r\n        <p>Share your thoughts, ask questions, and engage with others!</p>\r\n        <button \r\n          className=\"create-post-btn\" \r\n          onClick={() => setShowCreateModal(true)}\r\n        >\r\n          Create Post\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"users-section\">\r\n        <h2>Registered Users ({users.length})</h2>\r\n        <div className=\"users-list\">\r\n          {users.map((userData) => (\r\n            <div key={userData.id} className=\"user-card\">\r\n              <div className=\"user-avatar-small\">\r\n                {userData.email.charAt(0).toUpperCase()}\r\n              </div>\r\n              <div className=\"user-details\">\r\n                <span className=\"user-email-small\">{userData.email}</span>\r\n                <span className=\"user-stats\">\r\n                  Posts: {userData.postCount || 0} | \r\n                  Comments: {userData.commentCount || 0} | \r\n                  Joined: {userData.createdAt ? formatTime(userData.createdAt) : 'Recently'}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"posts-container\">\r\n        {loading ? (\r\n          <div style={{ textAlign: 'center', padding: '40px' }}>\r\n            <div className=\"spinner\"></div>\r\n            <p>Loading posts...</p>\r\n          </div>\r\n        ) : posts.length === 0 ? (\r\n          <div style={{ textAlign: 'center', padding: '40px', color: '#818384' }}>\r\n            <h3>No posts yet</h3>\r\n            <p>Be the first to create a post!</p>\r\n          </div>\r\n        ) : (\r\n          posts.map((post) => (\r\n            <div key={post.id} className=\"post-card\">\r\n              <div className=\"post-header\">\r\n                <span className=\"post-author\">{post.author}</span>\r\n                <span className=\"post-time\">{formatTime(post.timestamp)}</span>\r\n              </div>\r\n              <h3 className=\"post-title\">{post.title}</h3>\r\n              <p className=\"post-content\">{post.content}</p>\r\n              <div className=\"post-actions\">\r\n                <div \r\n                  className={`post-action ${isUpvoted(post) ? 'active' : ''}`}\r\n                  onClick={() => handleUpvote(\r\n                    post.id, \r\n                    post.upvotes || 0, \r\n                    post.upvotedBy || [], \r\n                    post.downvotedBy || []\r\n                  )}\r\n                >\r\n                  <span>👍 {post.upvotes || 0}</span>\r\n                </div>\r\n                <div \r\n                  className={`post-action ${isDownvoted(post) ? 'active' : ''}`}\r\n                  onClick={() => handleDownvote(\r\n                    post.id, \r\n                    post.downvotes || 0, \r\n                    post.upvotedBy || [], \r\n                    post.downvotedBy || []\r\n                  )}\r\n                >\r\n                  <span>👎 {post.downvotes || 0}</span>\r\n                </div>\r\n                <div \r\n                  className=\"post-action\"\r\n                  onClick={() => handleShowComments(post)}\r\n                >\r\n                  <span>💬 {post.comments ? post.comments.length : 0}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      {showCreateModal && (\r\n        <CreatePostModal\r\n          onClose={() => setShowCreateModal(false)}\r\n          onSubmit={handleCreatePost}\r\n        />\r\n      )}\r\n\r\n      {showCommentsModal && selectedPost && (\r\n        <CommentsModal\r\n          post={selectedPost}\r\n          user={user}\r\n          onClose={() => {\r\n            setShowCommentsModal(false);\r\n            setSelectedPost(null);\r\n          }}\r\n          onCommentAdded={() => {\r\n            fetchPosts();\r\n            fetchUsers(); // Refresh users to update comment counts\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Community;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}